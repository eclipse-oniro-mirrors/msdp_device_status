# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("../../../device_status.gni")

###############################hydra_fuzz#################################
import("//build/config/features.gni")
import("//build/test.gni")
module_output_path = "${device_status_fuzz_output_path}"
deps_ex = [
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "graphic_2d:librender_service_client",
    "graphic_2d:librender_service_base",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "image_framework:image_native",
    "input:libmmi-client",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
]

###############################fuzztest#################################
ohos_fuzztest("IntentionServiceFuzzTest") {
  module_out_path = module_output_path
  fuzz_config_file = "${device_status_root_path}/test/fuzztest/intentionservice_fuzzer"
  include_dirs = [
    "${device_status_root_path}/libs/interface",
    "${device_status_service_path}/interaction/drag/include",
    "${device_status_service_path}/communication/service/include",
    "${device_status_utils_path}/include",
  ]

  cflags = [
    "-g",
    "-O0",
    "-fno-omit-frame-pointer",
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  sources = [ "intention_service_fuzzer.cpp" ]

  deps = [
    "${device_status_root_path}/intention/services/intention_service:intention_service",
    "${device_status_root_path}/intention/boomerang/server:intention_boomerang_server",
    "${device_status_root_path}/intention/cooperate/server:intention_cooperate_server",
    "${device_status_root_path}/intention/drag/server:intention_drag_server",
    "${device_status_root_path}/intention/ipc/socket:intention_socket_server",
    "${device_status_root_path}/intention/ipc/tunnel:intention_server_stub",
    "${device_status_root_path}/intention/onscreen/server:intention_on_screen_server",
    "${device_status_root_path}/intention/prototype:intention_prototype",
    "${device_status_root_path}/intention/stationary/server:intention_stationary_server",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]

  external_deps = deps_ex
}

group("fuzztest") {
  testonly = true
  deps = []
  deps += [ ":IntentionServiceFuzzTest" ]
}
