# Copyright (c) 2022-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../device_status.gni")

group("device_status_fuzztest") {
  testonly = true
  deps = []

  deps += [
    "adapterddmadapter_fuzzer:fuzztest",
    "adapterinitsocket_fuzzer:fuzztest",
    "adapteropensession_fuzzer:fuzztest",
    "adaptersendheartbeat_fuzzer:fuzztest",
    "adaptersendpacket_fuzzer:fuzztest",
    "adddraglistener_fuzzer:fuzztest",
    "addhotarealistener_fuzzer:fuzztest",
    "addhotarealistenerstub_fuzzer:fuzztest",
    "addprivilegestub_fuzzer:fuzztest",
    "addsubscriptlistener_fuzzer:fuzztest",
    "addsubscriptlistenerstub_fuzzer:fuzztest",
    "boomerangsubscribe_fuzzer:fuzztest",
    "boomerangunsubscribe_fuzzer:fuzztest",
    "boomerangdecodeimage_fuzzer:fuzztest",
    "boomerangencodeimage_fuzzer:fuzztest",
    "checkdeviceonline_fuzzer:fuzztest",
    "ddmadapter_fuzzer:fuzztest",
    "devicegetcachestub_fuzzer:fuzztest",
    "devicestatusagent_fuzzer:fuzztest",
    "devicestatusclient_fuzzer:fuzztest",
    "devicestatussrvstub_fuzzer:fuzztest",
    "devicestatusstreambuffer_fuzzer:fuzztest",
    "devicesubscribestub_fuzzer:fuzztest",
    "deviceunsubscribestub_fuzzer:fuzztest",
    "entertexteditorarea_fuzzer:fuzztest",
    "getdragaction_fuzzer:fuzztest",
    "getdragdata_fuzzer:fuzztest",
    "getdragstate_fuzzer:fuzztest",
    "getdragsummary_fuzzer:fuzztest",
    "getdragtargetpid_fuzzer:fuzztest",
    "getextrainfo_fuzzer:fuzztest",
    "getshadowoffset_fuzzer:fuzztest",
    "getudkey_fuzzer:fuzztest",
    "handleallocsocketfd_fuzzer:fuzztest",
    "ipcsocket_fuzzer:fuzztest",
    "msdpdevicemanager_fuzzer:fuzztest",
    "notifymetadatabindingevent_fuzzer:fuzztest",
    "removedraglistener_fuzzer:fuzztest",
    "removehotarealistener_fuzzer:fuzztest",
    "removehotarealistenerstub_fuzzer:fuzztest",
    "removesubscriptlistener_fuzzer:fuzztest",
    "removesubscriptlistenerstub_fuzzer:fuzztest",
    "setdragwindowvisible_fuzzer:fuzztest",
    "sequenceable_fuzzer:fuzztest",
    "specialinputdevice_fuzzer:fuzztest",
    "startdrag_fuzzer:fuzztest",
    "stationaryparam_fuzzer:fuzztest",
    "stopdrag_fuzzer:fuzztest",
    "subscribe_fuzzer:fuzztest",
    "unregistercoordinationlistener_fuzzer:fuzztest",
    "unsubscribe_fuzzer:fuzztest",
    "updatedragstyle_fuzzer:fuzztest",
    "updatepreviewstyle_fuzzer:fuzztest",
    "updatepreviewstylewithanimationstub_fuzzer:fuzztest",
    "updateshadowpic_fuzzer:fuzztest",
    "intentionbundleinfo_fuzzer:fuzztest",
    "intentionclientdraganimation_fuzzer:fuzztest",
    "intentionclientdrag_fuzzer:fuzztest",
    "intentionclientoperatedrag_fuzzer:fuzztest",
    "intentionclientsocket_fuzzer:fuzztest",
    "intentiongetstate_fuzzer:fuzztest",
    "intentioncooperate_fuzzer:fuzztest",
    "intentiondragaction_fuzzer:fuzztest",
    "intentionservice_fuzzer:fuzztest",
  ]
  if (device_status_interaction_coordination) {
    deps += [
      "activatecooperate_fuzzer:fuzztest",
      "activatecoordination_fuzzer:fuzztest",
      "deactivatecooperate_fuzzer:fuzztest",
      "deactivatecoordination_fuzzer:fuzztest",
      "getcooperatestate_fuzzer:fuzztest",
      "getcoordinationstate_fuzzer:fuzztest",
      "preparecooperate_fuzzer:fuzztest",
      "preparecoordination_fuzzer:fuzztest",
      "registercooperatemonitor_fuzzer:fuzztest",
      "registercoordinationlistener_fuzzer:fuzztest",
      "unpreparecooperate_fuzzer:fuzztest",
      "unpreparecoordination_fuzzer:fuzztest",
      "unregistercooperatemonitor_fuzzer:fuzztest",
    ]
  }
}
