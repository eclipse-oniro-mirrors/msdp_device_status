# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../device_status.gni")

module_output_path = "${device_status_part_name}/device_status/unit_out"

ohos_unittest("CooperateClientTest") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"

  module_out_path = module_output_path
  include_dirs = [
    "${device_status_interfaces_path}/innerkits/interaction/include",
    "${device_status_utils_path}",
    "${device_status_utils_path}/include",
    "${device_status_root_path}/intention/cooperate/client/include",
    "${device_status_root_path}/test/unittest/intention/cooperate/include",
    "${device_status_root_path}/intention/ipc/tunnel/include",
  ]

  sources = [
    "${device_status_root_path}/intention/cooperate/client/src/cooperate_client.cpp",
    "src/cooperate_client_test.cpp",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  configs = []

  public_configs = [ "${device_status_root_path}/intention/ipc/tunnel:intention_tunnel_public_config" ]

  deps = [
    "${device_status_root_path}/intention/ipc/socket:intention_socket_connection",
    "${device_status_root_path}/intention/prototype:intention_prototype",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "eventhandler:libeventhandler",
    "googletest:gtest_main",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "image_framework:image_native",
    "input:libmmi-client",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]
}

ohos_unittest("CooperateServerTest") {
  module_out_path = module_output_path

  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"

  include_dirs = [
    "include",
    "${device_status_interfaces_path}/innerkits/interaction/include",
    "${device_status_interfaces_path}/innerkits/include",
    "${device_status_utils_path}",
    "${device_status_utils_path}/include",
    "${device_status_root_path}/intention/prototype/include",
    "${device_status_root_path}/services/native/include",
    "${device_status_root_path}/services/communication/service/include",
    "${device_status_root_path}/services/communication/base/",
  ]

  defines = []

  sources = [
    "src/cooperate_server_test.cpp",
    "src/test_context.cpp",
  ]

  configs = []

  defines = device_status_default_defines

  cflags = [ "-Dprivate=public" ]

  deps = [
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/adapters/dsoftbus_adapter:intention_dsoftbus_adapter",
    "${device_status_root_path}/intention/adapters/input_adapter:intention_input_adapter",
    "${device_status_root_path}/intention/cooperate/server:intention_cooperate_server",
    "${device_status_root_path}/intention/ipc/socket:intention_socket_session_manager",
    "${device_status_root_path}/intention/prototype:intention_prototype",
    "${device_status_root_path}/intention/scheduler/plugin_manager:intention_plugin_manager",
    "${device_status_root_path}/intention/scheduler/timer_manager:intention_timer_manager",
    "${device_status_root_path}/intention/services/device_manager:intention_device_manager",
    "${device_status_root_path}/services/interaction/drag:interaction_drag",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "cJSON:cjson",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_consumer",
    "eventhandler:libeventhandler",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "image_framework:image_native",
    "input:libmmi-client",
    "ipc:ipc_single",
    "libxml2:libxml2",
    "samgr:samgr_proxy",
    "window_manager:libdm",
  ]
}

ohos_unittest("InputEventSerializationTest") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }
  branch_protector_ret = "pac_ret"
  module_out_path = module_output_path
  include_dirs = [ "${device_status_root_path}/intention/cooperate/plugin/include/input_event_transmission" ]

  defines = []

  sources = [ "src/input_event_serialization_test.cpp" ]

  cflags = [ "-Dprivate=public" ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/common/channel:intention_channel",
    "${device_status_root_path}/intention/cooperate/plugin:intention_cooperate",
    "${device_status_root_path}/intention/prototype:intention_prototype",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokensetproc_shared",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "eventhandler:libeventhandler",
    "graphic_2d:librender_service_client",
    "graphic_2d:librender_service_base",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "image_framework:image_native",
    "input:libmmi-client",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
    "window_manager:libwmutil_base",
  ]
}

ohos_unittest("InputEventSamplerTest") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }
  branch_protector_ret = "pac_ret"
  module_out_path = module_output_path
  include_dirs = [ "${device_status_root_path}/intention/cooperate/plugin/include/input_event_transmission" ]

  defines = []

  sources = [ "src/input_event_sampler_test.cpp" ]

  cflags = [ "-Dprivate=public" ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/common/channel:intention_channel",
    "${device_status_root_path}/intention/cooperate/plugin:intention_cooperate",
    "${device_status_root_path}/intention/prototype:intention_prototype",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokensetproc_shared",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "eventhandler:libeventhandler",
    "graphic_2d:librender_service_client",
    "graphic_2d:librender_service_base",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "image_framework:image_native",
    "input:libmmi-client",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
    "window_manager:libwmutil_base",
  ]
}

ohos_unittest("InputEventBuilderTest") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  module_out_path = module_output_path
  include_dirs = [
    "${device_status_root_path}/intention/adapters/common_event_adapter/include",
    "${device_status_root_path}/intention/cooperate/plugin/include/input_event_transmission",
    "${device_status_root_path}/intention/cooperate/plugin/include",
    "${device_status_root_path}/intention/adapters/ddm_adapter/include",
    "${device_status_root_path}/intention/common/channel/include",
    "${device_status_root_path}/test/unittest/intention/cooperate/include",
    "${device_status_service_path}/delegate_task/include",
    "${device_status_intention_path}/services/device_manager/include",
    "${device_status_utils_path}/include",
    "${device_status_service_path}/communication/service/include",
    "${device_status_service_path}/interaction/drag/include",
    "${device_status_root_path}/intention/common/epoll/include",
    "${device_status_root_path}/libs/interface",
  ]
  sources = [ "src/input_event_builder_test.cpp" ]

  cflags = [ "-Dprivate=public" ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/adapters/dsoftbus_adapter:intention_dsoftbus_adapter",
    "${device_status_root_path}/intention/adapters/input_adapter:intention_input_adapter",
    "${device_status_root_path}/intention/cooperate/plugin:intention_cooperate",
    "${device_status_root_path}/intention/ipc/socket:intention_socket_connection",
    "${device_status_root_path}/intention/ipc/socket:intention_socket_session_manager",
    "${device_status_root_path}/intention/ipc/tunnel:intention_client",
    "${device_status_root_path}/intention/prototype:intention_prototype",
    "${device_status_root_path}/intention/scheduler/timer_manager:intention_timer_manager",
    "${device_status_root_path}/intention/services/device_manager:intention_device_manager",
    "${device_status_root_path}/intention/services/intention_service:intention_service",
    "${device_status_root_path}/services:devicestatus_static_service",
    "${device_status_root_path}/services/interaction/drag:interaction_drag",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
    "${device_status_utils_path}:devicestatus_util",
  ]

  external_deps = [
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "cJSON:cjson",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "eventhandler:libeventhandler",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "image_framework:image_native",
    "input:libmmi-client",
    "libxml2:libxml2",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
    "window_manager:libwmutil_base",
  ]
}

ohos_unittest("InputEventInterceptorTest") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  module_out_path = module_output_path
  include_dirs = [
    "${device_status_root_path}/intention/adapters/common_event_adapter/include",
    "${device_status_root_path}/intention/cooperate/plugin/include/input_event_transmission",
    "${device_status_root_path}/intention/cooperate/plugin/include",
    "${device_status_root_path}/intention/adapters/ddm_adapter/include",
    "${device_status_root_path}/intention/common/channel/include",
    "${device_status_root_path}/test/unittest/intention/cooperate/include",
    "${device_status_service_path}/delegate_task/include",
    "${device_status_intention_path}/services/device_manager/include",
    "${device_status_utils_path}/include",
    "${device_status_service_path}/communication/service/include",
    "${device_status_service_path}/interaction/drag/include",
    "${device_status_root_path}/intention/common/epoll/include",
    "${device_status_root_path}/libs/interface",
  ]
  sources = [ "src/input_event_interceptor_test.cpp" ]

  cflags = [ "-Dprivate=public" ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/adapters/dsoftbus_adapter:intention_dsoftbus_adapter",
    "${device_status_root_path}/intention/adapters/input_adapter:intention_input_adapter",
    "${device_status_root_path}/intention/cooperate/plugin:intention_cooperate",
    "${device_status_root_path}/intention/ipc/socket:intention_socket_connection",
    "${device_status_root_path}/intention/ipc/socket:intention_socket_session_manager",
    "${device_status_root_path}/intention/ipc/tunnel:intention_client",
    "${device_status_root_path}/intention/prototype:intention_prototype",
    "${device_status_root_path}/intention/scheduler/timer_manager:intention_timer_manager",
    "${device_status_root_path}/intention/services/device_manager:intention_device_manager",
    "${device_status_root_path}/intention/services/intention_service:intention_service",
    "${device_status_root_path}/services:devicestatus_static_service",
    "${device_status_root_path}/services/interaction/drag:interaction_drag",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
    "${device_status_utils_path}:devicestatus_util",
  ]

  external_deps = [
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "cJSON:cjson",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "eventhandler:libeventhandler",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "image_framework:image_native",
    "input:libmmi-client",
    "libxml2:libxml2",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
    "window_manager:libwmutil_base",
  ]
}

ohos_unittest("CooperateTest") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${device_status_root_path}/intention/adapters/common_event_adapter/include",
    "${device_status_root_path}/libs/interface",
    "${device_status_service_path}/communication/service/include",
  ]

  defines = []

  sources = [ "src/cooperate_test.cpp" ]

  cflags = [ "-Dprivate=public" ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/adapters/dsoftbus_adapter:intention_dsoftbus_adapter",
    "${device_status_root_path}/intention/adapters/input_adapter:intention_input_adapter",
    "${device_status_root_path}/intention/common/channel:intention_channel",
    "${device_status_root_path}/intention/cooperate/plugin:intention_cooperate",
    "${device_status_root_path}/intention/scheduler/plugin_manager:intention_plugin_manager",
    "${device_status_root_path}/services:devicestatus_static_service",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "ability_base:want",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "cJSON:cjson",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "eventhandler:libeventhandler",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image_native",
    "init:libbegetutil",
    "input:libmmi-client",
    "libxml2:libxml2",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
  ]
}

ohos_unittest("CooperateContextTest") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${device_status_root_path}/intention/adapters/common_event_adapter/include",
    "${device_status_root_path}/intention/services/device_manager/include",
    "${device_status_root_path}/libs/interface",
    "${device_status_service_path}/communication/service/include",
  ]

  defines = []

  sources = [ "src/cooperate_context_test.cpp" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/adapters/dsoftbus_adapter:intention_dsoftbus_adapter",
    "${device_status_root_path}/intention/adapters/input_adapter:intention_input_adapter",
    "${device_status_root_path}/intention/common/channel:intention_channel",
    "${device_status_root_path}/intention/cooperate/plugin:intention_cooperate",
    "${device_status_root_path}/intention/services/device_manager:intention_device_manager",
    "${device_status_root_path}/services:devicestatus_static_service",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "ability_base:want",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "cJSON:cjson",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "eventhandler:libeventhandler",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image_native",
    "init:libbegetutil",
    "input:libmmi-client",
    "libxml2:libxml2",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
  ]
}

ohos_unittest("CooperateFreeTest") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${device_status_root_path}/intention/adapters/common_event_adapter/include",
    "${device_status_root_path}/intention/services/device_manager/include",
    "${device_status_root_path}/libs/interface",
    "${device_status_service_path}/communication/service/include",
  ]

  defines = []

  sources = [ "src/cooperate_free_test.cpp" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/adapters/dsoftbus_adapter:intention_dsoftbus_adapter",
    "${device_status_root_path}/intention/adapters/input_adapter:intention_input_adapter",
    "${device_status_root_path}/intention/common/channel:intention_channel",
    "${device_status_root_path}/intention/cooperate/plugin:intention_cooperate",
    "${device_status_root_path}/intention/services/device_manager:intention_device_manager",
    "${device_status_root_path}/services:devicestatus_static_service",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "ability_base:want",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "cJSON:cjson",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "eventhandler:libeventhandler",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image_native",
    "init:libbegetutil",
    "input:libmmi-client",
    "libxml2:libxml2",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
  ]
}

ohos_unittest("CooperateInTest") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${device_status_root_path}/intention/adapters/common_event_adapter/include",
    "${device_status_root_path}/intention/services/device_manager/include",
    "${device_status_root_path}/libs/interface",
    "${device_status_service_path}/communication/service/include",
  ]

  defines = []

  sources = [ "src/cooperate_in_test.cpp" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/adapters/dsoftbus_adapter:intention_dsoftbus_adapter",
    "${device_status_root_path}/intention/adapters/input_adapter:intention_input_adapter",
    "${device_status_root_path}/intention/common/channel:intention_channel",
    "${device_status_root_path}/intention/cooperate/plugin:intention_cooperate",
    "${device_status_root_path}/intention/services/device_manager:intention_device_manager",
    "${device_status_root_path}/services:devicestatus_static_service",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "ability_base:want",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "cJSON:cjson",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "eventhandler:libeventhandler",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image_native",
    "init:libbegetutil",
    "input:libmmi-client",
    "libxml2:libxml2",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
  ]
}

ohos_unittest("CooperateOutTest") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${device_status_root_path}/intention/adapters/common_event_adapter/include",
    "${device_status_root_path}/intention/services/device_manager/include",
    "${device_status_root_path}/libs/interface",
    "${device_status_service_path}/communication/service/include",
  ]

  defines = []

  sources = [ "src/cooperate_out_test.cpp" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/adapters/dsoftbus_adapter:intention_dsoftbus_adapter",
    "${device_status_root_path}/intention/adapters/input_adapter:intention_input_adapter",
    "${device_status_root_path}/intention/common/channel:intention_channel",
    "${device_status_root_path}/intention/cooperate/plugin:intention_cooperate",
    "${device_status_root_path}/intention/services/device_manager:intention_device_manager",
    "${device_status_root_path}/services:devicestatus_static_service",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "ability_base:want",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "cJSON:cjson",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "eventhandler:libeventhandler",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image_native",
    "init:libbegetutil",
    "input:libmmi-client",
    "libxml2:libxml2",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
  ]
}

ohos_unittest("DsoftbusHanderTest") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${device_status_root_path}/intention/adapters/common_event_adapter/include",
    "${device_status_root_path}/intention/services/device_manager/include",
    "${device_status_root_path}/libs/interface",
    "${device_status_service_path}/communication/service/include",
  ]

  defines = []

  sources = [ "src/dsoftbus_handler_test.cpp" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/adapters/dsoftbus_adapter:intention_dsoftbus_adapter",
    "${device_status_root_path}/intention/adapters/input_adapter:intention_input_adapter",
    "${device_status_root_path}/intention/common/channel:intention_channel",
    "${device_status_root_path}/intention/cooperate/plugin:intention_cooperate",
    "${device_status_root_path}/intention/services/device_manager:intention_device_manager",
    "${device_status_root_path}/services:devicestatus_static_service",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "ability_base:want",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "cJSON:cjson",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "eventhandler:libeventhandler",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image_native",
    "init:libbegetutil",
    "input:libmmi-client",
    "libxml2:libxml2",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
  ]
}

ohos_unittest("EventManagerTest") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${device_status_root_path}/intention/adapters/common_event_adapter/include",
    "${device_status_root_path}/intention/services/device_manager/include",
    "${device_status_root_path}/libs/interface",
    "${device_status_service_path}/communication/service/include",
  ]

  defines = []

  sources = [ "src/event_manager_test.cpp" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/adapters/dsoftbus_adapter:intention_dsoftbus_adapter",
    "${device_status_root_path}/intention/adapters/input_adapter:intention_input_adapter",
    "${device_status_root_path}/intention/common/channel:intention_channel",
    "${device_status_root_path}/intention/cooperate/plugin:intention_cooperate",
    "${device_status_root_path}/intention/services/device_manager:intention_device_manager",
    "${device_status_root_path}/services:devicestatus_static_service",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "ability_base:want",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "cJSON:cjson",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "eventhandler:libeventhandler",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image_native",
    "init:libbegetutil",
    "input:libmmi-client",
    "libxml2:libxml2",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
  ]
}

ohos_unittest("HotAreaTest") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${device_status_root_path}/intention/adapters/common_event_adapter/include",
    "${device_status_root_path}/intention/services/device_manager/include",
    "${device_status_root_path}/libs/interface",
    "${device_status_service_path}/communication/service/include",
  ]

  defines = []

  sources = [ "src/hot_area_test.cpp" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/adapters/dsoftbus_adapter:intention_dsoftbus_adapter",
    "${device_status_root_path}/intention/adapters/input_adapter:intention_input_adapter",
    "${device_status_root_path}/intention/common/channel:intention_channel",
    "${device_status_root_path}/intention/cooperate/plugin:intention_cooperate",
    "${device_status_root_path}/intention/services/device_manager:intention_device_manager",
    "${device_status_root_path}/services:devicestatus_static_service",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "ability_base:want",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "cJSON:cjson",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "eventhandler:libeventhandler",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image_native",
    "init:libbegetutil",
    "input:libmmi-client",
    "libxml2:libxml2",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
  ]
}

ohos_unittest("InputDeviceMgrTest") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${device_status_root_path}/intention/adapters/common_event_adapter/include",
    "${device_status_root_path}/intention/services/device_manager/include",
    "${device_status_root_path}/libs/interface",
    "${device_status_service_path}/communication/service/include",
  ]

  defines = []

  sources = [ "src/input_device_mgr_test.cpp" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/adapters/dsoftbus_adapter:intention_dsoftbus_adapter",
    "${device_status_root_path}/intention/adapters/input_adapter:intention_input_adapter",
    "${device_status_root_path}/intention/common/channel:intention_channel",
    "${device_status_root_path}/intention/cooperate/plugin:intention_cooperate",
    "${device_status_root_path}/intention/services/device_manager:intention_device_manager",
    "${device_status_root_path}/services:devicestatus_static_service",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "ability_base:want",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "cJSON:cjson",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "eventhandler:libeventhandler",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image_native",
    "init:libbegetutil",
    "input:libmmi-client",
    "libxml2:libxml2",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
  ]
}

ohos_unittest("MouseLocationTest") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${device_status_root_path}/intention/adapters/common_event_adapter/include",
    "${device_status_root_path}/intention/services/device_manager/include",
    "${device_status_root_path}/libs/interface",
    "${device_status_service_path}/communication/service/include",
  ]

  defines = []

  sources = [ "src/mouse_location_test.cpp" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/adapters/dsoftbus_adapter:intention_dsoftbus_adapter",
    "${device_status_root_path}/intention/adapters/input_adapter:intention_input_adapter",
    "${device_status_root_path}/intention/common/channel:intention_channel",
    "${device_status_root_path}/intention/cooperate/plugin:intention_cooperate",
    "${device_status_root_path}/intention/services/device_manager:intention_device_manager",
    "${device_status_root_path}/services:devicestatus_static_service",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "ability_base:want",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "cJSON:cjson",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "eventhandler:libeventhandler",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image_native",
    "init:libbegetutil",
    "input:libmmi-client",
    "libxml2:libxml2",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
  ]
}

ohos_unittest("StateMachineTest") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${device_status_root_path}/intention/adapters/common_event_adapter/include",
    "${device_status_root_path}/intention/services/device_manager/include",
    "${device_status_root_path}/libs/interface",
    "${device_status_service_path}/communication/service/include",
  ]

  defines = []

  sources = [ "src/state_machine_test.cpp" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/adapters/ddm_adapter:intention_ddm_adapter",
    "${device_status_root_path}/intention/adapters/dsoftbus_adapter:intention_dsoftbus_adapter",
    "${device_status_root_path}/intention/adapters/input_adapter:intention_input_adapter",
    "${device_status_root_path}/intention/common/channel:intention_channel",
    "${device_status_root_path}/intention/cooperate/plugin:intention_cooperate",
    "${device_status_root_path}/intention/services/device_manager:intention_device_manager",
    "${device_status_root_path}/services:devicestatus_static_service",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "ability_base:want",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "cJSON:cjson",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "eventhandler:libeventhandler",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image_native",
    "init:libbegetutil",
    "input:libmmi-client",
    "libxml2:libxml2",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
  ]
}

group("unittest") {
  testonly = true
  deps = [
    ":CooperateClientTest",
    ":CooperateContextTest",
    ":CooperateFreeTest",
    ":CooperateInTest",
    ":CooperateOutTest",
    ":CooperateServerTest",
    ":CooperateTest",
    ":DsoftbusHanderTest",
    ":EventManagerTest",
    ":HotAreaTest",
    ":InputDeviceMgrTest",
    ":MouseLocationTest",
    ":StateMachineTest",
    ":InputEventBuilderTest",
    ":InputEventInterceptorTest",
    ":InputEventSamplerTest",
    ":InputEventSerializationTest",
  ]
}