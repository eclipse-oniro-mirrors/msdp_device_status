# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../device_status.gni")

module_output_path = "${device_status_part_name}/device_status/unit_out"

ohos_unittest("InteractionManagerTest") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"

  module_out_path = module_output_path
  include_dirs = [
    "${device_status_interfaces_path}/innerkits/interaction/include",
    "${device_status_utils_path}",
    "${device_status_utils_path}/include",
  ]

  defines = []

  sources = [ "src/interaction_manager_test.cpp" ]

  configs = []

  deps = [ "${device_status_interfaces_path}/innerkits:devicestatus_client" ]
  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "graphic_2d:librender_service_client",
    "graphic_2d:librender_service_base",
    "hilog:libhilog",
    "image_framework:image_native",
    "input:libmmi-client",
    "window_manager:libdm",
  ]
}

ohos_unittest("InteractionDragDrawingTest") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../ipc_blocklist.txt"
  }

  module_out_path = module_output_path
  include_dirs = [
    "${device_status_interfaces_path}/innerkits/interaction/include",
    "${device_status_utils_path}",
    "${device_status_utils_path}/include",
  ]

  sources = [ "src/interaction_drag_drawing_test.cpp" ]

  deps = [ "${device_status_interfaces_path}/innerkits:devicestatus_client" ]
  external_deps = [
    "c_utils:utils",
    "graphic_2d:librender_service_client",
    "graphic_2d:librender_service_base",
    "hilog:libhilog",
    "image_framework:image_native",
    "input:libmmi-client",
  ]
}

ohos_unittest("InteractionMouseLocationTest") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"
  module_out_path = module_output_path
  include_dirs = [
    "${device_status_interfaces_path}/innerkits/interaction/include",
    "${device_status_utils_path}",
    "${device_status_utils_path}/include",
  ]

  sources = [
    "${device_status_utils_path}/src/utility.cpp",
    "src/mouse_location_listener_test.cpp",
  ]

  deps = [ "${device_status_interfaces_path}/innerkits:devicestatus_client" ]
  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "c_utils:utils",
    "device_manager:devicemanagersdk",
    "graphic_2d:librender_service_client",
    "graphic_2d:librender_service_base",
    "hilog:libhilog",
    "image_framework:image_native",
    "input:libmmi-client",
    "window_manager:libdm",
  ]
}

group("unittest") {
  testonly = true
  deps = [
    ":InteractionDragDrawingTest",
    ":InteractionMouseLocationTest",
  ]
  if (build_variant == "root" && root_perf_main != "root_main") {
    deps += [ ":InteractionManagerTest" ]
  }
}
